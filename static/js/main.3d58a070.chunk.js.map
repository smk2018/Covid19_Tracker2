{"version":3,"sources":["components/Card/Cards.module.css","components/Card/Cards/Card.jsx","components/Card/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Card/Cards/Card.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","console","log","Chart","useState","dailyData","setDailyData","useEffect","fetchMYAPI","lineChart","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countries","handleCountryChange","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","coronaImage","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d58a070.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2t_J0\",\"infected\":\"Cards_infected__3Arct\",\"recovered\":\"Cards_recovered__3Tajx\",\"deaths\":\"Cards_deaths__2tQof\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {new Date(lastUpdate).toDateString()}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cardSubtitle}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardComponent;","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Cards/Card';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n        <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\n      <Grid container spacing={3} justify=\"center\">\n        <CardComponent\n          className={styles.infected}\n          cardTitle=\"Infected\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          value={recovered.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          value={deaths.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Info;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n//const url = 'https://disease.sh/v3/covid-19/all';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n//export const fetchDailyData = async () => {\n//  try {\n//    const { data } = await axios.get(`${url}/daily`);\n\n//    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n//      confirmed: confirmed.total,\n//      deaths: deaths.total,\n//      date,\n//    }));\n    /*const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    \n    return modifiedData;\n    */\n//  } catch (error) {\n//    return error;\n//  }\n//};\n\n// Instead of Global, it fetches the daily data for the US\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n\n    return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMYAPI = async () => {\n      setDailyData(await fetchDailyData());\n\n      //setDailyData(initialDailyData);\n    };\n\n    fetchMYAPI();\n  }, []);\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.recovered),\n            label: 'Recovered',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            labels: 'People',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=''\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value='United State'>Global</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    //this.setState({ data: fetchedData });\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt='COVID-19' />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"images\":\"App_images__1pgcE\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1gm9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}